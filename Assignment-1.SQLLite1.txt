-- Create SalesPeople table
CREATE TABLE SalesPeople (
    Snum INTEGER PRIMARY KEY,
    Sname TEXT UNIQUE,
    City TEXT,
    Comm REAL
);

-- Insert data into SalesPeople table
INSERT INTO SalesPeople (Snum, Sname, City, Comm)
VALUES (1001, 'Peel', 'London', 0.12),
       (1002, 'Serres', 'Sanjose', 0.13),
       (1004, 'Motika', 'London', 0.11),
       (1007, 'Rifkin', 'Barcelona', 0.15),
       (1003, 'Axelrod', 'Newyork', 0.10);

-- Create Customers table
CREATE TABLE Customers (
    Cnum INTEGER PRIMARY KEY,
    Cname TEXT,
    City TEXT NOT NULL,
    Snum INTEGER,
    FOREIGN KEY (Snum) REFERENCES SalesPeople (Snum)
);

-- Insert data into Customers table
INSERT INTO Customers (Cnum, Cname, City, Snum)
VALUES (2001, 'Hoffman', 'London', 1001),
       (2002, 'Giovanni', 'Rome', 1003),
       (2003, 'Liu', 'Sanjose', 1002),
       (2004, 'Grass', 'Berlin', 1002),
       (2006, 'Clemens', 'London', 1001),
       (2008, 'Cisneros', 'Sanjose', 1007),
       (2007, 'Pereira', 'Rome', 1004);

-- Create Orders table
CREATE TABLE Orders (
    Onum INTEGER PRIMARY KEY,
    Amt REAL,
    Odate TEXT,
    Cnum INTEGER,
    Snum INTEGER,
    FOREIGN KEY (Cnum) REFERENCES Customers (Cnum),
    FOREIGN KEY (Snum) REFERENCES SalesPeople (Snum)
);

-- Insert data into Orders table
INSERT INTO Orders (Onum, Amt, Odate, Cnum, Snum)
VALUES (3001, 18.69, '3-10-1990', 2008, 1007),
       (3003, 767.19, '3-10-1990', 2001, 1001),
       (3002, 1900.10, '3-10-1990', 2007, 1004),
       (3005, 5160.45, '3-10-1990', 2003, 1002),
       (3006, 1098.16, '3-10-1990', 2008, 1007),
       (3009, 1713.23, '4-10-1990', 2002, 1003),
       (3007, 75.75, '4-10-1990', 2004, 1002),
       (3008, 4273.00, '5-10-1990', 2006, 1001),
       (3010, 1309.95, '6-10-1990', 2004, 1002),
       (3011, 9891.88, '6-10-1990', 2006, 1001);

-- Question 1: Count the number of Salespeople whose name begin with 'a'/'A'
SELECT COUNT(*)
FROM SalesPeople
WHERE UPPER(Sname) LIKE 'A%';

-- Question 2: Display all the Salespeople whose all orders' worth is more than Rs. 2000
SELECT Sname
FROM SalesPeople
WHERE Snum IN (
    SELECT Snum
    FROM Orders
    GROUP BY Snum
    HAVING SUM(Amt) > 2000
);

-- Question 3: Count the number of Salespeople belonging to Newyork
SELECT COUNT(*)
FROM SalesPeople
WHERE City = 'Newyork';

-- Question 4: Display the number of Salespeople belonging to London and belonging to Paris
SELECT City, COUNT(*)
FROM SalesPeople
WHERE City IN ('London', 'Paris')
GROUP BY City;

-- Question 5: Display the number of orders taken by each Salesperson and their date of orders
SELECT Sname, COUNT(*) AS OrderCount, GROUP_CONCAT(Odate) AS OrderDates
FROM SalesPeople
JOIN Orders ON SalesPeople.Snum = Orders.Snum
GROUP BY SalesPeople.Snum;
